{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\src\\\\components\\\\Form3.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form'; // import validator from 'email-validator';\n\nimport { Modal } from 'react-materialize';\nexport default function Form2() {\n  //selsect option\n  const handleSelect = () => {\n    const selBox1 = document.querySelector('#type1');\n    const selBox2 = document.querySelector('#type2');\n    const idx = selBox1.selectedIndex;\n    var objOption = document.createElement(\"option\");\n    var optData = [{\n      text: ['기업 마케팅 / 채용 컨설팅 문의', '기업 마케터 / 인재 채용 문의', '기업 제휴 / 파트너쉽 문의']\n    }, {\n      text: ['마케터 커리어 개발 / 컨설팅 문의', '마케터 이직/구직 문의']\n    }, {\n      text: ['기타문의']\n    }];\n    selBox2.options.length = 0;\n\n    if (idx) {\n      selBox2.style.display = 'inline-block';\n\n      for (var i = 0; i < optData[idx - 1].text.length; i++) {\n        selBox2.options[i] = new Option(optData[idx - 1].text[i], optData[idx - 1].text[i]);\n      }\n    }\n  };\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        errors = _useForm.errors,\n        required = _useForm.required,\n        handleSubmit = _useForm.handleSubmit;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loading = _useState2[0],\n        setLoading = _useState2[1];\n\n  const baseUrl = 'https://common.mobidays.co.kr/mail/intouch/contact'; // const baseUrl = 'http://172.16.15.95:8989/mobi-rest-mailSender/mail/intouch/contact'\n\n  const onSubmit = data => {\n    console.log('data : ', data);\n    setLoading(true);\n    axios.post(baseUrl, data).then(res => {\n      // console.log('success ',data );\n      setLoading(false);\n      alert('문의사항이 성공적으로 접수되었습니다. 모비인터치 담당자가 배정되어 연락을 드릴 예정입니다. (*영업일 3일 기준)');\n      document.frm.reset();\n    }, err => {\n      setLoading(false);\n      console.log('err : ', err);\n      alert('문의사항 접수에 실패하였습니다. 아래 메일로 문의 바랍니다. mobintouch@mobidays.com');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"section-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    name: \"frm\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-elements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    className: \"pure-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\uBB38\\uC758 \\uC720\\uD615\"), React.createElement(\"div\", {\n    className: \"custom-select pure-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"type1\",\n    name: \"header\",\n    className: \"input-field first\",\n    onChange: () => handleSelect(),\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    selected: true,\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"\\uC138\\uBD80 \\uBB38\\uC758 \\uC720\\uD615\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694.\"), React.createElement(\"option\", {\n    value: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"company\"), React.createElement(\"option\", {\n    value: \"marketer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"marketer\"), React.createElement(\"option\", {\n    value: \"\\uAE30\\uD0C0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"\\uAE30\\uD0C0\")), React.createElement(\"select\", {\n    id: \"type2\",\n    name: \"subject\",\n    className: \"second\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), errors.type1 && React.createElement(\"span\", {\n    className: \"alert-txt teal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"\\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694\")), React.createElement(\"fieldset\", {\n    className: \"pure-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"\\uC131\\uD568\"), React.createElement(\"input\", {\n    id: \"name\",\n    name: \"userName\",\n    className: \"pure-group-text\",\n    type: \"text\",\n    placeholder: \"\\uBAA8\\uBE44\\uC778\",\n    maxLength: \"10\",\n    ref: register({\n      required: true,\n      maxLength: 10,\n      pattern: /^[가-힣a-zA-Z]+$/\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), errors.name && React.createElement(\"span\", {\n    className: \"alert-txt teal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uACF5\\uBC31 \\uB610\\uB294 \\uD2B9\\uC218\\uBB38\\uC790\\uB294 \\uC0AC\\uC6A9\\uD558\\uC2E4\\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\")), React.createElement(\"fieldset\", {\n    className: \"pure-group \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"\\uC18C\\uC18D\\uAE30\\uC5C5 \", React.createElement(\"span\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"(\\uC120\\uD0DD\\uC0AC\\uD56D)\")), React.createElement(\"input\", {\n    name: \"companyName\",\n    className: \"pure-group-text\",\n    type: \"text\",\n    placeholder: \"\\uBAA8\\uBE44\\uB370\\uC774\\uC988\",\n    maxLength: \"10\",\n    ref: register({\n      maxLength: 10\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"pure-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"\\uC9C1\\uD568 \", React.createElement(\"span\", {\n    className: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"(\\uC120\\uD0DD\\uC0AC\\uD56D)\"), \" \"), React.createElement(\"input\", {\n    id: \"position\",\n    name: \"position\",\n    className: \"pure-group-text\",\n    type: \"text\",\n    placeholder: \"\\uD300\\uC7A5\",\n    maxLength: \"10\",\n    ref: register({\n      maxLength: 10\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(\"fieldset\", {\n    className: \"pure-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"\\uC5F0\\uB77D\\uCC98\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"phoneNum\",\n    className: \"pure-group-text\",\n    placeholder: \"00012340000\",\n    ref: register({\n      required: true,\n      pattern: /^[0-9]+$/\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), errors.phoneNum && React.createElement(\"span\", {\n    className: \"alert-txt teal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"\\uC22B\\uC790\\uB9CC \\uC785\\uB825\\uD558\\uC138\\uC694\")), React.createElement(\"fieldset\", {\n    className: \"pure-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"\\uC774\\uBA54\\uC77C\"), React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    className: \"pure-group-text\",\n    placeholder: \"yourEmail@email.com\",\n    ref: register({\n      required: true,\n      pattern: /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }), errors.email && React.createElement(\"span\", {\n    className: \"alert-txt teal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"\\uC815\\uD655\\uD55C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\")), React.createElement(\"fieldset\", {\n    className: \"pure-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"pure-group-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"\\uBB38\\uC758\\uC0AC\\uD56D\"), React.createElement(\"textarea\", {\n    id: \"message\",\n    name: \"message\",\n    rows: \"10\",\n    className: \"pure-group-text\",\n    placeholder: \"\\uCC44\\uC6A9 \\uB610\\uB294 \\uCEE4\\uB9AC\\uC5B4 \\uAD00\\uB828 \\uBB38\\uC758\\uC0AC\\uD56D\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694.\\r\\n\\uBAA8\\uBE44\\uC778\\uD130\\uCE58 \\uB2F4\\uB2F9\\uC790\\uAC00 \\uBC30\\uC815\\uB418\\uC5B4 \\uC5F0\\uB77D\\uC744 \\uB4DC\\uB9B4 \\uC608\\uC815\\uC785\\uB2C8\\uB2E4.\\r\\n(*\\uC601\\uC5C5\\uC77C 3\\uC77C \\uAE30\\uC900)\",\n    maxLength: \"1000\",\n    ref: register({\n      required: true,\n      maxLength: 1000\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"pure-group-modal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"filled-in\",\n    name: \"agr\",\n    type: \"checkbox\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), errors.agr && React.createElement(\"span\", {\n    className: \"alert-chk teal-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    className: \"form\",\n    actions: [React.createElement(\"div\", {\n      className: \"modal-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-close \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"Medium material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"close\")))],\n    trigger: React.createElement(\"span\", {\n      className: \"text-deco\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"\\uAC1C\\uC778\\uC815\\uBCF4 \\uCDE8\\uAE09\\uBC29\\uCE68\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"text-contents\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"\\uC218\\uC9D1\\uD56D\\uBAA9 : \\uC774\\uB984, \\uD734\\uB300\\uC804\\uD654\\uBC88\\uD638, \\uC774\\uBA54\\uC77C\\uC8FC\\uC18C, \\uACBD\\uB825\\uC815\\uBCF4 \\uB4F1\\uC758 \\uC9C0\\uC6D0\\uC790\\uAC00 \\uC9C1\\uC811 \\uC791\\uC131\\uD55C \\uBCF8 \\uC11C\\uBCA0\\uC774 \\uBC0F \\uD5A5\\uD6C4 \\uC81C\\uCD9C\\uD558\\uB294 \\uC774\\uB825\\uC11C \\uB0B4 \\uBAA8\\uB4E0 \\uC815\\uBCF4\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"\\uC218\\uC9D1 \\uBC0F \\uD65C\\uC6A9\\uBAA9\\uC801 : \\uBA74\\uC811 \\uAD00\\uB828 \\uC815\\uBCF4 \\uC81C\\uACF5, \\uBA74\\uC811\\uC790 \\uBD88\\uB9CC\\uCC98\\uB9AC \\uBC0F \\uC0C1\\uB2F4 \\uB4F1 \\uBBFC\\uC6D0 \\uCC98\\uB9AC, \\uBD84\\uC7C1\\uC870\\uC815 \\uBC0F \\uD574\\uACB0\\uC744 \\uC704\\uD55C \\uAE30\\uB85D\\uBCF4\\uC874, \\uBAA8\\uBE44\\uB370\\uC774\\uC988\\uC5D0\\uC11C \\uC81C\\uACF5\\uD558\\uB294 \\uB2E4\\uC591\\uD55C \\uAD11\\uACE0/\\uB9C8\\uCF00\\uD305 \\uAD00\\uB828 \\uC815\\uBCF4 \\uACF5\\uC720\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"\\uBCF4\\uAD00\\uAE30\\uAC04\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, \"\\uAC1C\\uC778\\uC815\\uBCF4 \\uC81C\\uACF5\\uC77C\\uB85C\\uBD80\\uD130 1\\uB144\\uAC04 \\uBCF4\\uAD00\\uB418\\uBA70, \\uBCF4\\uAD00\\uAE30\\uAC04 \\uB0B4\\uC5D0 \\uC2E0\\uCCAD\\uC790\\uAC00 \\uC9C1\\uC811 \\uAC1C\\uC778\\uC815\\uBCF4 \\uD30C\\uAE30 \\uC694\\uCCAD\\uC744 \\uD558\\uC9C0 \\uC54A\\uB294 \\uACBD\\uC6B0, \\uC790\\uB3D9\\uC73C\\uB85C 1\\uB144 \\uC5F0\\uC7A5\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"\\uB2E8, \\uC0C1\\uBC95 \\uBC0F \\u2018\\uC804\\uC790\\uC0C1\\uAC70\\uB798 \\uB4F1\\uC5D0\\uC11C\\uC758 \\uC18C\\uBE44\\uC790 \\uBCF4\\uD638\\uC5D0 \\uAD00\\uD55C \\uBC95\\uB960\\u2019 \\uB4F1 \\uAD00\\uB828 \\uBC95\\uB839\\uC5D0 \\uC758\\uD558\\uC5EC \\uC77C\\uC815 \\uAE30\\uAC04 \\uBCF4\\uAD00\\uC774 \\uD544\\uC694\\uD55C \\uACBD\\uC6B0\\uC5D0\\uB294 \\uD574\\uB2F9 \\uAE30\\uAC04 \\uB3D9\\uC548 \\uBCF4\\uAD00\\uD568\"))), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, \"\\uB3D9\\uC758 \\uAC70\\uBD80\\uAD8C \\uB4F1\\uC5D0 \\uB300\\uD55C \\uACE0\\uC9C0: \\uC815\\uBCF4\\uC8FC\\uCCB4\\uB294 \\uAC1C\\uC778\\uC815\\uBCF4\\uC758 \\uC218\\uC9D1 \\uBC0F \\uC774\\uC6A9 \\uB3D9\\uC758\\uB97C \\uAC70\\uBD80\\uD560 \\uAD8C\\uB9AC\\uAC00 \\uC788\\uC73C\\uB098, \\uC774 \\uACBD\\uC6B0 \\uCC44\\uC6A9 \\uD504\\uB85C\\uC138\\uC2A4 \\uC9C0\\uC6D0\\uC5D0 \\uC81C\\uD55C\\uC774 \\uC788\\uC744 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"))), \"\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4\"))), React.createElement(\"p\", {\n    className: \"loading-txt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, loading == true ? 'Loading.....' : ''), React.createElement(\"div\", {\n    className: \"pure-group pure-group-btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"button-success pure-button button-xlarge btn-style\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"\\uBB38\\uC758\\uD558\\uAE30\"))));\n}","map":{"version":3,"sources":["C:/Users/tarot/mjwork/portfolio/mobintouch/src/components/Form3.js"],"names":["React","useState","useEffect","axios","useForm","Modal","Form2","handleSelect","selBox1","document","querySelector","selBox2","idx","selectedIndex","objOption","createElement","optData","text","options","length","style","display","i","Option","register","errors","required","handleSubmit","loading","setLoading","baseUrl","onSubmit","data","console","log","post","then","res","alert","frm","reset","err","type1","maxLength","pattern","name","phoneNum","email","agr"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { useForm } from 'react-hook-form'\r\n// import validator from 'email-validator';\r\n\r\nimport { Modal } from 'react-materialize';\r\n\r\nexport default function Form2(){ \r\n    //selsect option\r\n    const handleSelect = ()=>{\r\n        const selBox1 = document.querySelector('#type1');\r\n        const selBox2 = document.querySelector('#type2');\r\n        const idx = selBox1.selectedIndex;\r\n        var objOption = document.createElement(\"option\");\r\n\r\n        var optData = [\r\n            {text:['기업 마케팅 / 채용 컨설팅 문의','기업 마케터 / 인재 채용 문의','기업 제휴 / 파트너쉽 문의' ]},\r\n            {text:['마케터 커리어 개발 / 컨설팅 문의','마케터 이직/구직 문의']},\r\n            {text:['기타문의']}\r\n        ]\r\n\r\n        selBox2.options.length = 0;\r\n        if(idx){\r\n            selBox2.style.display = 'inline-block';\r\n            for( var i=0;i<optData[idx-1].text.length;i++){\r\n                selBox2.options[i] = new Option(optData[idx-1].text[i],optData[idx-1].text[i]);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const { register, errors, required ,handleSubmit } = useForm();\r\n    const [loading,setLoading] = useState(false)\r\n\r\n    const baseUrl = 'https://common.mobidays.co.kr/mail/intouch/contact';\r\n    // const baseUrl = 'http://172.16.15.95:8989/mobi-rest-mailSender/mail/intouch/contact'\r\n    const onSubmit = (data) => {\r\n        console.log( 'data : ',data );   \r\n            \r\n        setLoading(true)\r\n        axios.post(baseUrl, data )\r\n        .then((res)=>{\r\n            // console.log('success ',data );\r\n            setLoading(false);\r\n            alert('문의사항이 성공적으로 접수되었습니다. 모비인터치 담당자가 배정되어 연락을 드릴 예정입니다. (*영업일 3일 기준)')\r\n            document.frm.reset();\r\n        }, (err)=>{\r\n            setLoading(false);\r\n            console.log('err : ',err)\r\n            alert('문의사항 접수에 실패하였습니다. 아래 메일로 문의 바랍니다. mobintouch@mobidays.com')\r\n        })\r\n        \r\n    }\r\n\r\n    return(\r\n        <div className=\"section-form\" >\r\n            <form name=\"frm\" \r\n                  onSubmit={handleSubmit(onSubmit)}\r\n            >   \r\n                <div className=\"form-elements\">\r\n                    <fieldset className=\"pure-group\">\r\n                        <label className=\"pure-group-label active\" >문의 유형</label>\r\n                        <div className=\"custom-select pure-group-text\" >\r\n                            <select id=\"type1\" name=\"header\" className=\"input-field first\" \r\n                                    onChange={()=>handleSelect()} \r\n                                    ref={register({ required: true })} >\r\n                                <option value=\"\" selected disabled>세부 문의 유형을 선택하세요.</option>\r\n                                <option value=\"company\" >company</option>\r\n                                <option value=\"marketer\">marketer</option>\r\n                                <option value=\"기타\">기타</option>                               \r\n                            </select>\r\n                            <select id=\"type2\" name=\"subject\" className=\"second\"\r\n                                    ref={register({ required: true })} ></select>\r\n                        </div>\r\n                        {errors.type1 && <span className=\"alert-txt teal-text\">선택해주세요</span>}\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group \">\r\n                        <label className=\"pure-group-label \" >성함</label>\r\n                        <input id=\"name\" name=\"userName\" className=\"pure-group-text\"\r\n                               type=\"text\"  \r\n                               placeholder=\"모비인\"\r\n                               maxLength=\"10\"\r\n                               ref={\r\n                                   register({ \r\n                                       required: true, \r\n                                       maxLength: 10,\r\n                                       pattern: /^[가-힣a-zA-Z]+$/ \r\n                                    })\r\n                               }\r\n                        />\r\n                        {errors.name && <span className=\"alert-txt teal-text\">공백 또는 특수문자는 사용하실수 없습니다.</span>}\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group \">\r\n                        <label className=\"pure-group-label\">소속기업 <span className=\"small\">(선택사항)</span></label>\r\n                        <input name=\"companyName\" className=\"pure-group-text\"\r\n                               type=\"text\" \r\n                               placeholder=\"모비데이즈\"\r\n                               maxLength=\"10\"\r\n                               ref={ register({ maxLength: 10 }) }\r\n                        />\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group\">\r\n                        <label className=\"pure-group-label\">직함 <span className=\"small\">(선택사항)</span> </label>\r\n                        <input id=\"position\" name=\"position\" className=\"pure-group-text\"\r\n                               type=\"text\" \r\n                               placeholder=\"팀장\"\r\n                               maxLength=\"10\"\r\n                               ref={ register({ maxLength: 10 }) }\r\n                        />\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group\">\r\n                        <label className=\"pure-group-label\" >연락처</label>\r\n                        <input type=\"text\" name=\"phoneNum\" className=\"pure-group-text\" \r\n                               placeholder=\"00012340000\"\r\n                               ref={ register({ required: true, pattern:/^[0-9]+$/ }) } />\r\n                        {errors.phoneNum && <span className=\"alert-txt teal-text\">숫자만 입력하세요</span>}\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group\">\r\n                        <label className=\"pure-group-label\" >이메일</label>\r\n                        <input id=\"email\" name=\"email\" \r\n                               type=\"email\"\r\n                               className=\"pure-group-text\"\r\n                               placeholder=\"yourEmail@email.com\" \r\n                               ref={ register({ required: true,pattern:/^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/ }) }\r\n                        />\r\n                        {errors.email && <span className=\"alert-txt teal-text\">정확한 주소를 입력해주세요</span>}\r\n                    </fieldset>\r\n\r\n                    <fieldset className=\"pure-group\">\r\n                        <label className=\"pure-group-label\" >문의사항</label>\r\n                        <textarea id=\"message\" name=\"message\" rows=\"10\" className=\"pure-group-text\" \r\n                          placeholder=\"채용 또는 커리어 관련 문의사항을 남겨주세요.&#13;&#10;모비인터치 담당자가 배정되어 연락을 드릴 예정입니다.&#13;&#10;(*영업일 3일 기준)\" \r\n                          maxLength=\"1000\"\r\n                          ref={ register({ required: true,maxLength:1000 }) } \r\n                        ></textarea>\r\n                    </fieldset>\r\n                </div>\r\n\r\n                <div className=\"pure-group-modal\">\r\n                    <label>\r\n                        <input className=\"filled-in\" name=\"agr\" type=\"checkbox\"  \r\n                               ref={ register({ required: true }) } />\r\n                        {errors.agr && <span className=\"alert-chk teal-text\"></span>}\r\n                        <span>\r\n                        <Modal className=\"form\"\r\n                               actions={[\r\n                                   <div className=\"modal-btn\">   \r\n                                       <div className=\"modal-close \" > \r\n                                       <i className=\"Medium material-icons\">close</i> \r\n                                       </div>\r\n                                   </div>\r\n                               ]}\r\n                               trigger={ <span className=\"text-deco\">개인정보 취급방침</span> }\r\n                        >  \r\n                          <ul className=\"text-contents\">\r\n                                <li>수집항목 : 이름, 휴대전화번호, 이메일주소, 경력정보 등의 지원자가 직접 작성한 본 서베이 및 향후 제출하는 이력서 내 모든 정보</li>\r\n                                <li>수집 및 활용목적 : 면접 관련 정보 제공, 면접자 불만처리 및 상담 등 민원 처리, 분쟁조정 및 해결을 위한 기록보존, 모비데이즈에서 제공하는 다양한 광고/마케팅 관련 정보 공유</li>\r\n                                <li>보관기간\r\n                                    <ul>\r\n                                        <li>개인정보 제공일로부터 1년간 보관되며, 보관기간 내에 신청자가 직접 개인정보 파기 요청을 하지 않는 경우, 자동으로 1년 연장</li>\r\n                                        <li>단, 상법 및 ‘전자상거래 등에서의 소비자 보호에 관한 법률’ 등 관련 법령에 의하여 일정 기간 보관이 필요한 경우에는 해당 기간 동안 보관함</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>동의 거부권 등에 대한 고지: 정보주체는 개인정보의 수집 및 이용 동의를 거부할 권리가 있으나, 이 경우 채용 프로세스 지원에 제한이 있을 수 있습니다.</li>\r\n                            </ul>\r\n                        </Modal>에 동의합니다\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <p className=\"loading-txt\">{loading == true ? 'Loading.....' : ''}</p>\r\n                <div className=\"pure-group pure-group-btn\">\r\n                    <button className=\"button-success pure-button button-xlarge btn-style\" >문의하기</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}