{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\src\\\\pages\\\\ProgramPage\\\\ProgramNavi.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Router, Route, Link, NavLink } from 'react-router-dom';\nimport './programNavi.css';\n/***** slide 형식 버튼 layout/event ***********/\n// let cnt=0;\n// function tabButton(e){\n//   const set = {\n//     wrap : document.querySelector('#tabButton_wrap'),\n//     tabWrap : document.querySelector('.tab-btnList'),\n//     tabLi : document.querySelectorAll('.dataButton-list'),\n//     next : document.querySelector('.btn-next'),\n//     prev : document.querySelector('.btn-prev'),\n//     target : e.target.value,\n//     winWidth : window.innerWidth\n//   }\n//   const{ wrap,tabWrap,tabLi,next,prev,target,winWidth } = set;\n//   const wrapWid = wrap.offsetWidth;//wrap(div) wid\n//   const totalWid = tabWrap.offsetWidth;//tab(ul) wid\n//   const move = (totalWid-wrapWid)/(tabLi.length-7);\n//   const moveEvent=(num,btn,sta)=>{\n//     wrap.scrollLeft = num;\n//     btn.style.display=sta;\n//   }\n//   if(winWidth < 600){\n//     //mobile\n//     const move = (totalWid-wrapWid)/(tabLi.length-3);\n//     if( target == 'prev' ){\n//       cnt--;\n//       cnt < 1 ? moveEvent( 0,prev,'none')\n//               : moveEvent( move*cnt,next,'block' );\n//     }else{\n//       cnt++;\n//       cnt > tabLi.length-4 ? moveEvent( totalWid-wrapWid,next,'none')\n//                            : moveEvent( move*cnt,prev,'block');\n//     }\n//   }else{\n//     //pc\n//     if( target == 'prev' ){\n//       cnt--;\n//       cnt < 1 ? moveEvent( 0,prev,'none')\n//               : moveEvent( move*cnt,next,'block' );\n//     }else{\n//       cnt++;\n//       cnt > tabLi.length-8 ? moveEvent( totalWid-wrapWid,next,'none')\n//                            : moveEvent( move*cnt,prev,'block');\n//     }\n//   }\n// }\n\nconst NameTag = [{\n  class: 'all',\n  name: '전체'\n}, {\n  class: 'cmo',\n  name: 'CMO/팀장'\n}, {\n  class: 'planning',\n  name: '전략기획/영업'\n}, {\n  class: 'brand',\n  name: '브랜드/PR'\n}, {\n  class: 'performance',\n  name: '퍼포먼스'\n}, {\n  class: 'contents',\n  name: '콘텐츠'\n}, {\n  class: 'md',\n  name: '상품기획/MD'\n}, {\n  class: 'promotion',\n  name: '프로모션/CRM'\n}, {\n  class: 'aeMedia',\n  name: 'AE/미디어플래닝'\n}, {\n  class: 'service',\n  name: '서비스기획/디자인'\n}];\n\nfunction DailyButton(props) {\n  return React.createElement(\"div\", {\n    className: \" data-button \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"content-title \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"\\uC624\\uD508 \\uCC44\\uC6A9 \\uACF5\\uACE0\"), React.createElement(\"div\", {\n    className: \"content-text \",\n    id: \"tabButton_wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"flexBox tab-btnList \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, NameTag.map((con, i) => {\n    var type = con.class;\n    const active = {\n      background: '#336aab',\n      color: '#fff',\n      borderRadius: '5px',\n      boxShadow: '0px 3px .3em rgba(65,79,99,.4)'\n    };\n    return React.createElement(\"li\", {\n      className: \"dataButton-list \".concat(con.class),\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      exact: true,\n      to: \"/partner/position/\".concat(con.class),\n      type: con.class // onClick={()=>props.handleName(con.class)}\n      ,\n      activeStyle: active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, con.name));\n  }))));\n}\n\nexport default DailyButton;","map":{"version":3,"sources":["C:/Users/tarot/mjwork/portfolio/mobintouch/src/pages/ProgramPage/ProgramNavi.js"],"names":["React","Component","useState","useEffect","Router","Route","Link","NavLink","NameTag","class","name","DailyButton","props","map","con","i","type","active","background","color","borderRadius","boxShadow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,OAA9B,QAA6C,kBAA7C;AAEA,OAAO,mBAAP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAC,KAAR;AAAcC,EAAAA,IAAI,EAAC;AAAnB,CADc,EAEd;AAAED,EAAAA,KAAK,EAAC,KAAR;AAAcC,EAAAA,IAAI,EAAC;AAAnB,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAC,UAAR;AAAmBC,EAAAA,IAAI,EAAC;AAAxB,CAHc,EAId;AAAED,EAAAA,KAAK,EAAC,OAAR;AAAgBC,EAAAA,IAAI,EAAC;AAArB,CAJc,EAKd;AAAED,EAAAA,KAAK,EAAC,aAAR;AAAsBC,EAAAA,IAAI,EAAC;AAA3B,CALc,EAMd;AAAED,EAAAA,KAAK,EAAC,UAAR;AAAmBC,EAAAA,IAAI,EAAC;AAAxB,CANc,EAOd;AAAED,EAAAA,KAAK,EAAC,IAAR;AAAaC,EAAAA,IAAI,EAAC;AAAlB,CAPc,EAQd;AAAED,EAAAA,KAAK,EAAC,WAAR;AAAoBC,EAAAA,IAAI,EAAC;AAAzB,CARc,EASd;AAAED,EAAAA,KAAK,EAAC,SAAR;AAAkBC,EAAAA,IAAI,EAAC;AAAvB,CATc,EAUd;AAAED,EAAAA,KAAK,EAAC,SAAR;AAAkBC,EAAAA,IAAI,EAAC;AAAvB,CAVc,CAAhB;;AAaA,SAASC,WAAT,CAAsBC,KAAtB,EAA4B;AAC1B,SACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,EAAE,EAAC,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIJ,OAAO,CAACK,GAAR,CAAa,CAACC,GAAD,EAAKC,CAAL,KAAS;AACtB,QAAIC,IAAI,GAAGF,GAAG,CAACL,KAAf;AACA,UAAMQ,MAAM,GAAE;AACZC,MAAAA,UAAU,EAAC,SADC;AAEZC,MAAAA,KAAK,EAAC,MAFM;AAGZC,MAAAA,YAAY,EAAC,KAHD;AAIZC,MAAAA,SAAS,EAAC;AAJE,KAAd;AAMA,WACE;AAAI,MAAA,SAAS,4BAAqBP,GAAG,CAACL,KAAzB,CAAb;AAA+C,MAAA,GAAG,EAAEM,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,EAAE,8BAAuBD,GAAG,CAACL,KAA3B,CAAjB;AACS,MAAA,IAAI,EAAEK,GAAG,CAACL,KADnB,CAES;AAFT;AAGS,MAAA,WAAW,EAAEQ,MAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIEH,GAAG,CAACJ,IAJN,CADF,CADF;AASD,GAjBC,CADJ,CADJ,CAFJ,CADF;AAkCD;;AAGD,eAAeC,WAAf","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\r\nimport { Router, Route, Link, NavLink } from 'react-router-dom';\r\n\r\nimport './programNavi.css';\r\n\r\n/***** slide 형식 버튼 layout/event ***********/\r\n// let cnt=0;\r\n// function tabButton(e){\r\n//   const set = {\r\n//     wrap : document.querySelector('#tabButton_wrap'),\r\n//     tabWrap : document.querySelector('.tab-btnList'),\r\n//     tabLi : document.querySelectorAll('.dataButton-list'),\r\n//     next : document.querySelector('.btn-next'),\r\n//     prev : document.querySelector('.btn-prev'),\r\n//     target : e.target.value,\r\n//     winWidth : window.innerWidth\r\n//   }\r\n//   const{ wrap,tabWrap,tabLi,next,prev,target,winWidth } = set;\r\n\r\n//   const wrapWid = wrap.offsetWidth;//wrap(div) wid\r\n//   const totalWid = tabWrap.offsetWidth;//tab(ul) wid\r\n//   const move = (totalWid-wrapWid)/(tabLi.length-7);\r\n\r\n//   const moveEvent=(num,btn,sta)=>{\r\n//     wrap.scrollLeft = num;\r\n//     btn.style.display=sta;\r\n//   }\r\n \r\n//   if(winWidth < 600){\r\n//     //mobile\r\n//     const move = (totalWid-wrapWid)/(tabLi.length-3);\r\n//     if( target == 'prev' ){\r\n//       cnt--;\r\n//       cnt < 1 ? moveEvent( 0,prev,'none')\r\n//               : moveEvent( move*cnt,next,'block' );\r\n//     }else{\r\n//       cnt++;\r\n//       cnt > tabLi.length-4 ? moveEvent( totalWid-wrapWid,next,'none')\r\n//                            : moveEvent( move*cnt,prev,'block');\r\n//     }\r\n//   }else{\r\n//     //pc\r\n//     if( target == 'prev' ){\r\n//       cnt--;\r\n//       cnt < 1 ? moveEvent( 0,prev,'none')\r\n//               : moveEvent( move*cnt,next,'block' );\r\n//     }else{\r\n//       cnt++;\r\n//       cnt > tabLi.length-8 ? moveEvent( totalWid-wrapWid,next,'none')\r\n//                            : moveEvent( move*cnt,prev,'block');\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst NameTag = [\r\n  { class:'all',name:'전체' },\r\n  { class:'cmo',name:'CMO/팀장' },\r\n  { class:'planning',name:'전략기획/영업' },\r\n  { class:'brand',name:'브랜드/PR' },\r\n  { class:'performance',name:'퍼포먼스' },\r\n  { class:'contents',name:'콘텐츠' },\r\n  { class:'md',name:'상품기획/MD' },\r\n  { class:'promotion',name:'프로모션/CRM' },\r\n  { class:'aeMedia',name:'AE/미디어플래닝' },\r\n  { class:'service',name:'서비스기획/디자인' }\r\n]\r\n  \r\nfunction DailyButton (props){\r\n  return(\r\n    <div className=\" data-button \">\r\n        <h3 className=\"content-title \">오픈 채용 공고</h3>\r\n        <div className=\"content-text \" id=\"tabButton_wrap\">\r\n            <ul className=\"flexBox tab-btnList \" >\r\n              { NameTag.map( (con,i)=>{\r\n                var type = con.class;\r\n                const active= {\r\n                  background:'#336aab',\r\n                  color:'#fff',\r\n                  borderRadius:'5px',\r\n                  boxShadow:'0px 3px .3em rgba(65,79,99,.4)'\r\n                }\r\n                return(\r\n                  <li className={`dataButton-list ${con.class}`} key={i} >\r\n                    <NavLink exact to={`/partner/position/${con.class}`}\r\n                             type={con.class}\r\n                             // onClick={()=>props.handleName(con.class)}\r\n                             activeStyle={active}\r\n                    >{con.name}</NavLink>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n        </div>\r\n        {/* 슬라이드형식 버튼 next/prev */}\r\n        {/* <div className=\"tab-btnBox wid\">\r\n            <button type=\"button\" className=\"tab-btn btn-prev\" value=\"prev\"\r\n                    onClick={ tabButton } >navigate_before</button>\r\n            <button type=\"button\" className=\"tab-btn btn-next\" value=\"next\"\r\n                    onClick={ tabButton } >navigate_next</button>\r\n        </div> */}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default DailyButton;"]},"metadata":{},"sourceType":"module"}