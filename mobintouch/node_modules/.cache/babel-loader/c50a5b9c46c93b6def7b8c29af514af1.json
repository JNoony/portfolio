{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\src\\\\components\\\\Header\\\\Nav.js\";\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport { // Route as Router,\nLink, NavLink } from 'react-router-dom'; // import { Dropdown,Button } from 'react-materialize';\n\nimport M from \"materialize-css\";\nexport default function Nav(props) {\n  // const isMobile = ()=>{\n  //     return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  // }\n  //반응형 window width\n  function useWindowSize() {\n    const _useState = useState([0]),\n          _useState2 = _slicedToArray(_useState, 2),\n          size = _useState2[0],\n          setSize = _useState2[1];\n\n    useLayoutEffect(() => {\n      function updateSize() {\n        setSize([window.innerWidth]);\n      }\n\n      window.addEventListener('resize', updateSize);\n      updateSize();\n      return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n  }\n\n  useEffect(() => {\n    // width<769부터 메뉴 드롭다운\n    var drop = document.querySelectorAll('.dropdown-trigger');\n    M.Dropdown.init(drop);\n  }, []);\n\n  const topFunction = () => {\n    document.body.scrollTop = 0; // For Safari\n\n    document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n  };\n\n  const handleClick = event => topFunction();\n\n  const kakaoAdd = event => {\n    // 1:1 채팅 \n    window.Kakao.Channel.chat({\n      channelPublicId: 'kakao_ID'\n    });\n  };\n\n  return React.createElement(\"ul\", {\n    className: \"gnbBox \".concat(useWindowSize() < 769 ? 'dropdown-content' : ''),\n    id: \"mobile-gnb\",\n    ref: drop => {\n      drop = drop;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, navName.map((con, i) => {\n    return React.createElement(\"li\", {\n      className: \"gnb-li \".concat(window.location.pathname == con.href ? 'on' : ''),\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: con.href,\n      rel: \"noopener noreferrer\",\n      onClick: handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, con.name));\n  }));\n}\nconst navName = [{\n  href: '/company',\n  class: 'company',\n  name: 'company'\n}, {\n  href: '/marketer',\n  class: 'marketer',\n  name: 'marketer'\n}, {\n  href: '/position',\n  class: 'position',\n  name: '오픈채용 포지션'\n}, {\n  href: '/contact',\n  class: 'contact',\n  name: '문의하기'\n}];","map":{"version":3,"sources":["C:/Users/tarot/mjwork/portfolio/mobintouch/src/components/Header/Nav.js"],"names":["React","useState","useEffect","useLayoutEffect","Link","NavLink","M","Nav","props","useWindowSize","size","setSize","updateSize","window","innerWidth","addEventListener","removeEventListener","drop","document","querySelectorAll","Dropdown","init","topFunction","body","scrollTop","documentElement","handleClick","event","kakaoAdd","Kakao","Channel","chat","channelPublicId","navName","map","con","i","location","pathname","href","name","class"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,eAAjC,QAAuD,OAAvD;AACA,SACI;AACAC,IAFJ,EAGIC,OAHJ,QAGmB,kBAHnB,C,CAKA;;AACA,OAAOC,CAAP,MAAc,iBAAd;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAC9B;AACA;AACA;AAEA;AACA,WAASC,aAAT,GAAyB;AAAA,sBACGR,QAAQ,CAAC,CAAC,CAAD,CAAD,CADX;AAAA;AAAA,UACdS,IADc;AAAA,UACRC,OADQ;;AAErBR,IAAAA,eAAe,CAAC,MAAM;AACpB,eAASS,UAAT,GAAsB;AACpBD,QAAAA,OAAO,CAAC,CAACE,MAAM,CAACC,UAAR,CAAD,CAAP;AACD;;AACDD,MAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,UAAlC;AACAA,MAAAA,UAAU;AACV,aAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,UAArC,CAAb;AACD,KAPc,EAOZ,EAPY,CAAf;AAQA,WAAOF,IAAP;AACH;;AAEDR,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,QAAIe,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,mBAA1B,CAAX;AACAb,IAAAA,CAAC,CAACc,QAAF,CAAWC,IAAX,CAAgBJ,IAAhB;AACH,GAJQ,EAIP,EAJO,CAAT;;AAMA,QAAMK,WAAW,GAAG,MAAM;AACtBJ,IAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,GAA0B,CAA1B,CADsB,CACO;;AAC7BN,IAAAA,QAAQ,CAACO,eAAT,CAAyBD,SAAzB,GAAqC,CAArC,CAFsB,CAEkB;AAC3C,GAHD;;AAIA,QAAME,WAAW,GAAGC,KAAK,IAAIL,WAAW,EAAxC;;AAEA,QAAMM,QAAQ,GAAID,KAAD,IAAW;AACxB;AACAd,IAAAA,MAAM,CAACgB,KAAP,CAAaC,OAAb,CAAqBC,IAArB,CAA0B;AACxBC,MAAAA,eAAe,EAAE;AADO,KAA1B;AAGH,GALD;;AAQA,SACI;AAAI,IAAA,SAAS,mBAAavB,aAAa,KAAK,GAAlB,GAAwB,kBAAxB,GAA6C,EAA1D,CAAb;AACI,IAAA,EAAE,EAAC,YADP;AAEI,IAAA,GAAG,EAAIQ,IAAD,IAAU;AAACA,MAAAA,IAAI,GAAGA,IAAP;AAAY,KAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGMgB,OAAO,CAACC,GAAR,CAAa,CAACC,GAAD,EAAKC,CAAL,KAAS;AACpB,WACI;AAAI,MAAA,SAAS,mBAAavB,MAAM,CAACwB,QAAP,CAAgBC,QAAhB,IAA4BH,GAAG,CAACI,IAAhC,GAAuC,IAAvC,GAA8C,EAA3D,CAAb;AACI,MAAA,GAAG,EAAEH,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAED,GAAG,CAACI,IAAd;AAAoB,MAAA,GAAG,EAAC,qBAAxB;AACI,MAAA,OAAO,EAAEb,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKS,GAAG,CAACK,IAFT,CAFJ,CADJ;AASH,GAVC,CAHN,CADJ;AAsBH;AAED,MAAMP,OAAO,GAAG,CACZ;AAAEM,EAAAA,IAAI,EAAC,UAAP;AAAmBE,EAAAA,KAAK,EAAC,SAAzB;AAAoCD,EAAAA,IAAI,EAAC;AAAzC,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAC,WAAP;AAAoBE,EAAAA,KAAK,EAAC,UAA1B;AAAsCD,EAAAA,IAAI,EAAC;AAA3C,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAC,WAAP;AAAoBE,EAAAA,KAAK,EAAC,UAA1B;AAAsCD,EAAAA,IAAI,EAAC;AAA3C,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAC,UAAP;AAAmBE,EAAAA,KAAK,EAAC,SAAzB;AAAoCD,EAAAA,IAAI,EAAC;AAAzC,CAJY,CAAhB","sourcesContent":["import React,{useState,useEffect,useLayoutEffect} from 'react';\r\nimport { \r\n    // Route as Router,\r\n    Link, \r\n    NavLink } from 'react-router-dom';\r\n\r\n// import { Dropdown,Button } from 'react-materialize';\r\nimport M from \"materialize-css\";\r\n\r\nexport default function Nav(props){       \r\n    // const isMobile = ()=>{\r\n    //     return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n    // }\r\n\r\n    //반응형 window width\r\n    function useWindowSize() {\r\n        const [size, setSize] = useState([0]);\r\n        useLayoutEffect(() => {\r\n          function updateSize() {\r\n            setSize([window.innerWidth]);\r\n          }\r\n          window.addEventListener('resize', updateSize);\r\n          updateSize();\r\n          return () => window.removeEventListener('resize', updateSize);\r\n        }, []);\r\n        return size;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // width<769부터 메뉴 드롭다운\r\n        var drop = document.querySelectorAll('.dropdown-trigger');\r\n        M.Dropdown.init(drop);\r\n    },[])\r\n\r\n    const topFunction = () => {\r\n        document.body.scrollTop = 0; // For Safari\r\n        document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\r\n    }\r\n    const handleClick = event => topFunction();\r\n\r\n    const kakaoAdd = (event) => {\r\n        // 1:1 채팅 \r\n        window.Kakao.Channel.chat({\r\n          channelPublicId: 'kakao_ID' \r\n        })\r\n    }\r\n    \r\n\r\n    return(\r\n        <ul className={`gnbBox ${ useWindowSize() < 769 ? 'dropdown-content' : ''}`} \r\n            id=\"mobile-gnb\" \r\n            ref={ (drop) => {drop = drop} } >\r\n            { navName.map( (con,i)=>{\r\n                return(\r\n                    <li className={`gnb-li ${ window.location.pathname == con.href ? 'on' : ''}`} \r\n                        key={i} >\r\n                        <Link to={con.href} rel=\"noopener noreferrer\" \r\n                            onClick={handleClick} >\r\n                            {con.name}\r\n                        </Link>\r\n                    </li>\r\n                )\r\n            })}\r\n            {/* <li className={`gnb-li `}>\r\n                <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSd0dKMOjJiiOYEFhEN-4lDkWX8g3GEG8AxwIjIbneWKvysG4g/viewform\"\r\n                   target=\"_blank\" \r\n                   rel=\"noopener noreferrer\">contact</a>\r\n            </li> */}\r\n        </ul>    \r\n    )\r\n}\r\n\r\nconst navName = [\r\n    { href:'/company', class:'company', name:'company'  },\r\n    { href:'/marketer', class:'marketer', name:'marketer'  },\r\n    { href:'/position', class:'position', name:'오픈채용 포지션'  },\r\n    { href:'/contact', class:'contact', name:'문의하기'  },\r\n]"]},"metadata":{},"sourceType":"module"}