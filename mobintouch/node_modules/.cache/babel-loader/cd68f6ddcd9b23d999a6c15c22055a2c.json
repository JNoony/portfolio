{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\tarot\\\\mjwork\\\\portfolio\\\\mobintouch\\\\src\\\\pages\\\\PositionPage\\\\List.js\";\nimport React, { useState, useEffect, useCallback } from \"react\"; // import { GridLayout } from \"@egjs/react-infinitegrid\";\n// import InfiniteScroll from 'react-infinite-scroll-component';\n\nimport JsonData from '../../Data/position_list.js';\n\nconst nowDate = () => {\n  const today = new Date();\n  const y = today.getFullYear();\n  const m = today.getMonth() + 1;\n  const d = today.getDate();\n  return \"\".concat(y, \"-\").concat(m, \"-\").concat(d);\n};\n\nJsonData.sort((a, b) => {\n  let dateA = new Date(a.date).getTime();\n  let dateB = new Date(b.date).getTime();\n\n  if (a.state !== 'close' && b.state !== 'close') {\n    if (dateA < dateB) return 1;\n    if (dateA > dateB) return -1;\n    if (a.company > b.company) return 1;\n    if (a.company < b.company) return -1;\n  }\n\n  return 0;\n}); //--------- LIST Render\n\nexport default function List(props) {\n  const _useState = useState(JsonData),\n        _useState2 = _slicedToArray(_useState, 2),\n        list = _useState2[0],\n        setList = _useState2[1];\n\n  const OFFSET = 16;\n\n  const _useState3 = useState(Array.from(list.slice(0, OFFSET), (v, n) => list[n])),\n        _useState4 = _slicedToArray(_useState3, 2),\n        listItems = _useState4[0],\n        setListItems = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isFetching = _useState6[0],\n        setIsFetching = _useState6[1]; //하단 스크롤감지\n\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('touchmove', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('touchmove', handleScroll);\n    };\n  }, []);\n\n  function getDocumentHeight() {\n    const body = document.body;\n    const html = document.documentElement;\n    return Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight);\n  }\n\n  ;\n\n  function getScrollTop() {\n    return window.pageYOffset !== undefined ? window.pageYOffset : (document.documentElement || document.body.parentNode || document.body).scrollTop;\n  }\n\n  function handleScroll() {\n    if (window.innerHeight < 870) {\n      if (window.innerHeight + Math.ceil(getScrollTop()) < Math.floor(getDocumentHeight())) return;\n    } else {\n      if (Math.floor(window.innerHeight + getScrollTop()) !== Math.floor(getDocumentHeight())) return;\n    }\n\n    setIsFetching(true);\n  } //리스트 추가하기\n\n\n  useEffect(() => {\n    if (!isFetching) return;\n    fetchMoreListItems();\n  }, [isFetching]);\n\n  function fetchMoreListItems() {\n    setTimeout(() => {\n      setListItems(prevState => [...prevState, ...Array.from(list.slice(prevState.length, prevState.length + OFFSET), (v, n) => list[prevState.length + n])]);\n      setIsFetching(false);\n    }, 200);\n  } // value값 바뀌면 list re-render\n\n\n  useEffect(() => {\n    props.value !== 'all' ? setList(JsonData.filter(type => type.type.match(props.value))) : setList(JsonData);\n  }, [props.value]); // list가 변경되면 listItems re-render\n\n  useEffect(() => {\n    setListItems(Array.from(list.slice(0, OFFSET), (v, n) => list[n]));\n  }, [list]);\n\n  window.onscroll = () => handleScroll();\n\n  return React.createElement(React.Fragment, null, listItems.map((con, i) => React.createElement(Item, {\n    url: con.url,\n    key: i,\n    class: con.state.length > 0 ? 'close' : '',\n    src: con.src,\n    alt: con.company,\n    company: con.company,\n    position: con.position,\n    job: con.job,\n    point: con.point,\n    location: con.location,\n    pay: con.pay,\n    num: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"list-loading-txt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, isFetching ? 'Loading...' : 'End of List'));\n}\n\nconst Item = props => {\n  return React.createElement(\"a\", {\n    className: \"data-list-box \".concat(props.class),\n    href: props.url,\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"data-list-box-img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.src,\n    alt: props.company,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"data-list-box-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"data-company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, props.company), React.createElement(\"div\", {\n    className: \"data-position\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, props.position, \" (\", props.job, \")\"), React.createElement(\"div\", {\n    className: \"data-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"data-info-point small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, props.point), React.createElement(\"div\", {\n    className: \"data-info-location small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, props.location)), React.createElement(\"div\", {\n    className: \"data-pay\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"\\uCD94\\uCC9C\\uBCF4\\uC0C1\\uAE08 \", props.pay)));\n};","map":{"version":3,"sources":["C:/Users/tarot/mjwork/portfolio/mobintouch/src/pages/PositionPage/List.js"],"names":["React","useState","useEffect","useCallback","JsonData","nowDate","today","Date","y","getFullYear","m","getMonth","d","getDate","sort","a","b","dateA","date","getTime","dateB","state","company","List","props","list","setList","OFFSET","Array","from","slice","v","n","listItems","setListItems","isFetching","setIsFetching","window","addEventListener","handleScroll","removeEventListener","getDocumentHeight","body","document","html","documentElement","Math","max","scrollHeight","offsetHeight","clientHeight","getScrollTop","pageYOffset","undefined","parentNode","scrollTop","innerHeight","ceil","floor","fetchMoreListItems","setTimeout","prevState","length","value","filter","type","match","onscroll","map","con","i","url","src","position","job","point","location","pay","Item","class"],"mappings":"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","sourcesContent":["import React,\r\n{useState,useEffect,useCallback } from \"react\";\r\n// import { GridLayout } from \"@egjs/react-infinitegrid\";\r\n// import InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport JsonData from '../../Data/position_list.js';\r\nconst nowDate = ()=>{\r\n  const today = new Date();\r\n  const y = today.getFullYear();\r\n  const m = today.getMonth()+1;\r\n  const d = today.getDate();\r\n  return `${y}-${m}-${d}`\r\n}\r\n\r\nJsonData.sort( (a,b) => {\r\n    let dateA = new Date(a.date).getTime();\r\n    let dateB = new Date(b.date).getTime();\r\n    if( a.state !== 'close' && b.state !== 'close' ){\r\n      if( dateA < dateB ) return 1;\r\n      if( dateA > dateB ) return -1;\r\n      if( a.company > b.company ) return 1;\r\n      if( a.company < b.company ) return -1;\r\n    }\r\n    return 0;\r\n  })\r\n  \r\n\r\n  \r\n  \r\n\r\n\r\n//--------- LIST Render\r\nexport default function List(props){\r\n\r\n  const [list,setList] = useState(JsonData);\r\n  const OFFSET = 16;\r\n  const [listItems, setListItems] = useState(Array.from( list.slice(0,OFFSET), \r\n                                                        (v ,n) => list[n] ));\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  \r\n   //하단 스크롤감지\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', handleScroll);\r\n    window.addEventListener('touchmove', handleScroll);\r\n    return () => { \r\n        window.removeEventListener('scroll', handleScroll);\r\n        window.removeEventListener('touchmove', handleScroll);\r\n    }\r\n  }, []);\r\n\r\n  function getDocumentHeight() {\r\n    const body = document.body;\r\n    const html = document.documentElement;\r\n    \r\n    return Math.max(\r\n        body.scrollHeight, body.offsetHeight,\r\n        html.clientHeight, html.scrollHeight, html.offsetHeight\r\n    );\r\n  };\r\n \r\n  function getScrollTop() {\r\n      return (window.pageYOffset !== undefined) ? \r\n              window.pageYOffset : \r\n              (document.documentElement || document.body.parentNode || document.body).scrollTop;\r\n  }\r\n\r\n  function handleScroll() {  \r\n    if( window.innerHeight < 870 ){\r\n      if( window.innerHeight + Math.ceil(getScrollTop()) < \r\n          Math.floor( getDocumentHeight() ) ) return;\r\n    }else{\r\n      if ( Math.floor(window.innerHeight + getScrollTop() ) !== \r\n           Math.floor( getDocumentHeight() ) ) return;\r\n    }\r\n    setIsFetching(true);\r\n  }\r\n \r\n  //리스트 추가하기\r\n  useEffect(() => {\r\n    if (!isFetching) return;\r\n    fetchMoreListItems();\r\n  }, [isFetching]);\r\n\r\n  function fetchMoreListItems() {\r\n    setTimeout(() => {\r\n      setListItems(prevState => (\r\n        [...prevState, \r\n         ...Array.from( list.slice( prevState.length, prevState.length+OFFSET ),\r\n                        (v,n) => list[prevState.length+n] )]\r\n      ));\r\n      setIsFetching(false);\r\n    }, 200);\r\n  }\r\n\r\n  // value값 바뀌면 list re-render\r\n  useEffect(()=>{\r\n    props.value  !== 'all' ?\r\n      setList( JsonData.filter( type => type.type.match(props.value)) ) :\r\n      setList( JsonData );    \r\n  },[props.value]);\r\n\r\n  // list가 변경되면 listItems re-render\r\n  useEffect(()=>{\r\n    setListItems(Array.from( list.slice(0,OFFSET), (v ,n) => list[n] ) )\r\n  },[list]);\r\n\r\n   window.onscroll = ()=> handleScroll();\r\n  \r\n  return(\r\n    <>\r\n      { listItems.map( (con,i) => (\r\n        <Item \r\n          url={con.url}\r\n          key={i}\r\n          class={con.state.length>0 ? 'close' : ''}\r\n          src={con.src} alt={con.company}\r\n          company={con.company}\r\n          position={con.position} job={con.job}\r\n          point={con.point}\r\n          location={con.location}\r\n          pay={con.pay}\r\n          num={i}\r\n        />\r\n      )) }\r\n      <p className=\"list-loading-txt\">{isFetching ? 'Loading...' : 'End of List'}</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Item = props => {\r\n  return(\r\n    <a className={`data-list-box ${props.class}`} href={props.url} target=\"_blank\"> \r\n      <div className=\"data-list-box-img\">\r\n         <img src={props.src} alt={props.company} />\r\n      </div>\r\n      <div className=\"data-list-box-text\">\r\n          <div className=\"data-company\">{props.company}</div>\r\n          <div className=\"data-position\">\r\n            {props.position} &#40;{props.job}&#41;\r\n          </div>\r\n           <div className=\"data-info\">\r\n            <div className=\"data-info-point small\">{props.point}</div>\r\n            <div className=\"data-info-location small\">{props.location}</div>\r\n          </div>\r\n          <div className=\"data-pay\">추천보상금 {props.pay}</div>\r\n      </div>\r\n    </a>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}