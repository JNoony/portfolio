{"version":3,"file":"infinitegrid.cjs.js","sources":["../src/react-infinitegrid/LoadingBar.tsx","../src/react-infinitegrid/utils.ts","../src/react-infinitegrid/InfiniteGrid.tsx","../src/react-infinitegrid/layouts/GridLayout.tsx","../src/react-infinitegrid/layouts/JustifiedLayout.tsx","../src/react-infinitegrid/layouts/FrameLayout.tsx","../src/react-infinitegrid/layouts/SquareLayout.tsx","../src/react-infinitegrid/layouts/PackingLayout.tsx","../src/react-infinitegrid/index.umd.ts"],"sourcesContent":["export default function LoadingBar(props: { loading: React.ReactElement }) {\n\treturn props.loading;\n}\n","export function camelize(str: string) {\n\treturn str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n","import * as React from \"react\";\nimport NativeInfiniteGrid, {\n\tGridLayout,\n\tILayout,\n\tcategorize,\n\tCONTAINER_CLASSNAME,\n\tItemManager,\n\tIItem,\n\tINFINITEGRID_EVENTS,\n\twithInfiniteGridMethods,\n} from \"@egjs/infinitegrid\";\nimport { findDOMNode } from \"react-dom\";\nimport { InfiniteGridProps, InfiniteGridType } from \"./types\";\nimport LoadingBar from \"./LoadingBar\";\nimport { camelize } from \"./utils\";\n\nexport default class InfiniteGrid<T extends ILayout = GridLayout> extends React.Component<InfiniteGridProps<T>, {\n\tlayout: string;\n}> {\n\tpublic static defaultProps: Required<InfiniteGridProps> = {\n\t\ttag: \"div\",\n\t\tcontainerTag: \"div\",\n\t\tlayoutType: GridLayout,\n\t\toptions: {},\n\t\tlayoutOptions: {},\n\t\tuseFirstRender: true,\n\t\tstatus: null,\n\t\tloading: null,\n\t\tgroupBy: (item: any, index: number) => {\n\t\t\tconst props = item.props;\n\n\t\t\tif (\"data-groupkey\" in props) {\n\t\t\t\treturn props[\"data-groupkey\"];\n\t\t\t} else if (\"groupKey\" in props) {\n\t\t\t\treturn props.groupKey;\n\t\t\t} else {\n\t\t\t\treturn \"\";\n\t\t\t}\n\t\t},\n\t\tonAppend: () => { },\n\t\tonPrepend: () => { },\n\t\tonLayoutComplete: () => { },\n\t\tonImageError: () => { },\n\t\tonChange: () => { },\n\t};\n\tpublic state = {\n\t\tlayout: \"\",\n\t};\n\t@withInfiniteGridMethods\n\tprivate ig!: NativeInfiniteGrid;\n\tprivate wrapperElement!: HTMLElement;\n\tprivate containerElement!: HTMLElement;\n\n\tpublic render() {\n\t\tconst props = this.props;\n\t\tconst attributes = {};\n\t\tconst items = this.toItems();\n\t\tconst Tag = this.props.tag as any;\n\n\t\tfor (const name in props) {\n\t\t\tif (name in InfiniteGrid.defaultProps) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tattributes[name] = props[name];\n\t\t}\n\n\t\tlet visibleChildren: React.ReactElement[] = [];\n\t\tconst ig = this.ig;\n\n\t\tif (ig) {\n\t\t\tconst state = this.state;\n\t\t\tconst result = ig.beforeSync(items);\n\t\t\tstate.layout = result === \"relayout\" ? result : state.layout || result;\n\n\t\t\tvisibleChildren = ig.getRenderingItems().map((item: IItem) => item.jsx);\n\n\t\t\tif (this.props.loading && ig.isLoading()) {\n\t\t\t\tvisibleChildren.push(<LoadingBar key=\"loadingBar\" loading={this.props.loading!} />);\n\t\t\t}\n\t\t} else {\n\t\t\tconst groups = categorize(items);\n\t\t\tif (props.status) {\n\t\t\t\tconst { startCursor, endCursor } = props.status._infinite;\n\n\t\t\t\tvisibleChildren = ItemManager.pluck(\n\t\t\t\t\tgroups.slice(startCursor, endCursor + 1),\n\t\t\t\t\t\"items\",\n\t\t\t\t).map((item: IItem) => item.jsx);\n\t\t\t} else if (props.useFirstRender && groups[0]) {\n\t\t\t\tvisibleChildren = groups[0].items.map((item: IItem) => item.jsx);\n\t\t\t}\n\t\t}\n\t\treturn <Tag {...attributes}>{this.renderContainer(visibleChildren)}</Tag>;\n\t}\n\tpublic componentDidUpdate() {\n\t\tconst ig = this.ig;\n\t\tconst state = this.state;\n\t\tconst layout = state.layout;\n\t\tconst elements = this.getElements();\n\n\t\tif (this.props.loading && ig.isLoading()) {\n\t\t\tconst loadingElement = elements.splice(elements.length - 1, 1)[0];\n\n\t\t\tig.setLoadingBar({\n\t\t\t\tappend: loadingElement,\n\t\t\t\tprepend: loadingElement,\n\t\t\t});\n\t\t}\n\t\tig.sync(elements);\n\n\t\tif (layout) {\n\t\t\tstate.layout = \"\";\n\t\t\tig.layout(layout === \"relayout\");\n\t\t}\n\t}\n\tpublic componentDidMount() {\n\t\tthis.wrapperElement = findDOMNode(this) as HTMLElement;\n\n\t\tthis.ig = new NativeInfiniteGrid(this.wrapperElement, {\n\t\t\t...this.props.options,\n\t\t\trenderExternal: true,\n\t\t}).on(\"render\", ({ next }) => {\n\t\t\tthis.forceUpdate(() => {\n\t\t\t\tnext();\n\t\t\t});\n\t\t});\n\t\tconst ig = this.ig;\n\n\t\tINFINITEGRID_EVENTS.forEach((name: string) => {\n\t\t\tconst eventName = camelize(`on ${name}`);\n\t\t\tig.on(name, (e: any) => {\n\t\t\t\tthis.props[eventName]!({ ...e, currentTarget: this });\n\t\t\t});\n\t\t});\n\n\t\tig.setLayout(this.props.layoutType, this.props.layoutOptions);\n\n\t\tconst elements = this.getElements();\n\n\t\tif (this.props.status) {\n\t\t\tig.setStatus(this.props.status, true, elements);\n\t\t} else {\n\t\t\tig.beforeSync(this.toItems());\n\t\t\tig.layout(true);\n\t\t}\n\t}\n\tpublic componentWillUnmount() {\n\t\tthis.ig.destroy();\n\t}\n\tpublic isLoading() {\n\t\treturn this.ig.isLoading();\n\t}\n\tprivate renderContainer(children: React.ReactElement[]) {\n\t\tconst props = this.props;\n\t\tconst { isOverflowScroll } = props.options;\n\n\t\tif (!isOverflowScroll) {\n\t\t\treturn children;\n\t\t}\n\t\tconst ContainerTag = props.containerTag as any;\n\n\t\treturn <ContainerTag className={CONTAINER_CLASSNAME} ref={(e: any) => {\n\t\t\te && (this.containerElement = e);\n\t\t}}>\n\t\t\t{children}\n\t\t</ContainerTag>;\n\t}\n\tprivate getElements(): HTMLElement[] {\n\t\treturn [].slice.call((this.containerElement || this.wrapperElement).children);\n\t}\n\tprivate toItems() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tgroupBy,\n\t\t} = this.props;\n\t\tconst reactChildren = React.Children.toArray(children);\n\t\treturn reactChildren.map((child: React.ReactElement, i) => {\n\t\t\tconst groupKey = groupBy(child, i);\n\t\t\tconst itemKey = child.key;\n\n\t\t\treturn { groupKey, itemKey, jsx: child };\n\t\t});\n\t}\n}\n\nexport default interface InfiniteGrid extends InfiniteGridType<InfiniteGrid> { }\n","import { GridLayout as LayoutType } from \"@egjs/infinitegrid\";\nimport InfiniteGrid from \"../InfiniteGrid\";\nimport { InfiniteGridProps } from \"../types\";\n\nexport default class GridLayout extends InfiniteGrid<LayoutType> {\n\tpublic static defaultProps: Required<InfiniteGridProps<LayoutType>> = {\n\t\t...InfiniteGrid.defaultProps,\n\t\tlayoutType: LayoutType,\n\t};\n}\n","import { JustifiedLayout as LayoutType } from \"@egjs/infinitegrid\";\nimport InfiniteGrid from \"../InfiniteGrid\";\nimport { InfiniteGridProps } from \"../types\";\n\nexport default class JustifiedLayout extends InfiniteGrid<LayoutType> {\n\tpublic static defaultProps: Required<InfiniteGridProps<LayoutType>> = {\n\t\t...InfiniteGrid.defaultProps,\n\t\tlayoutType: LayoutType,\n\t};\n}\n","import { FrameLayout as LayoutType } from \"@egjs/infinitegrid\";\nimport InfiniteGrid from \"../InfiniteGrid\";\nimport { InfiniteGridProps } from \"../types\";\n\nexport default class FrameLayout extends InfiniteGrid<LayoutType> {\n\tpublic static defaultProps: Required<InfiniteGridProps<LayoutType>> = {\n\t\t...InfiniteGrid.defaultProps,\n\t\tlayoutType: LayoutType,\n\t};\n}\n","import { SquareLayout as LayoutType } from \"@egjs/infinitegrid\";\nimport InfiniteGrid from \"../InfiniteGrid\";\nimport { InfiniteGridProps } from \"../types\";\n\nexport default class SquareLayout extends InfiniteGrid<LayoutType> {\n\tpublic static defaultProps: Required<InfiniteGridProps<LayoutType>> = {\n\t\t...InfiniteGrid.defaultProps,\n\t\tlayoutType: LayoutType,\n\t};\n}\n","import { PackingLayout as LayoutType } from \"@egjs/infinitegrid\";\nimport InfiniteGrid from \"../InfiniteGrid\";\nimport { InfiniteGridProps } from \"../types\";\n\nexport default class PackingLayout extends InfiniteGrid<LayoutType> {\n\tpublic static defaultProps: Required<InfiniteGridProps<LayoutType>> = {\n\t\t...InfiniteGrid.defaultProps,\n\t\tlayoutType: LayoutType,\n\t};\n}\n","import InfiniteGrid, * as modules from \"./index\";\n\nfor (const name in modules) {\n\t(InfiniteGrid as any)[name] = modules[name];\n}\n\nexport default InfiniteGrid;\n"],"names":["LoadingBar","props","loading","camelize","str","replace","all","letter","toUpperCase","__extends","_this","layout","attributes","items","toItems","Tag","tag","name","InfiniteGrid","defaultProps","visibleChildren","ig","state","result","beforeSync","getRenderingItems","map","item","jsx","isLoading","push","React","key","groups","categorize","status","_a","startCursor","endCursor","ItemManager","pluck","slice","useFirstRender","renderContainer","elements","getElements","loadingElement","splice","length","setLoadingBar","append","prepend","sync","wrapperElement","findDOMNode","NativeInfiniteGrid","options","renderExternal","on","next","forceUpdate","INFINITEGRID_EVENTS","forEach","eventName","e","currentTarget","setLayout","layoutType","layoutOptions","setStatus","destroy","children","isOverflowScroll","ContainerTag","containerTag","className","CONTAINER_CLASSNAME","ref","containerElement","call","groupBy","reactChildren","toArray","child","i","groupKey","itemKey","GridLayout","index","onAppend","onPrepend","onLayoutComplete","onImageError","onChange","__decorate","withInfiniteGridMethods","LayoutType","JustifiedLayout","FrameLayout","SquareLayout","PackingLayout","modules"],"mappings":"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"}