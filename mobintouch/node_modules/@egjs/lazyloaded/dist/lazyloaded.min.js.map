{"version":3,"file":"lazyloaded.min.js","sources":["../src/consts.ts","../src/utils.ts","../src/AutoSizer.ts","../src/LazyLoaded.ts"],"sourcesContent":["const isWindow = typeof window !== \"undefined\";\nconst ua = isWindow ? window.navigator.userAgent : \"\";\nexport const SUPPORT_COMPUTEDSTYLE = isWindow ? !!(\"getComputedStyle\" in window) : false;\nexport const IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nexport const SUPPORT_ADDEVENTLISTENER = isWindow ? !!(\"addEventListener\" in document) : false;\nexport const WIDTH = \"width\";\nexport const HEIGHT = \"height\";\n","import { ArrayFormat, InnerSizeType, ClientSizeType, ScrollSizeType, OffsetSizeType } from \"./types\";\n\nimport { SUPPORT_ADDEVENTLISTENER, SUPPORT_COMPUTEDSTYLE } from \"./consts\";\n\nexport function getAttribute(el: HTMLElement, name: string) {\n  return el.getAttribute(name) || \"\";\n}\n\nexport function toArray<T>(arr: ArrayFormat<T>): T[] {\n  return [].slice.call(arr);\n}\nexport function isDataAttribute(target: HTMLElement, prefix: string = \"data-\"): boolean {\n  return !!target.getAttribute(`${prefix}width`);\n}\nexport function addEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (SUPPORT_ADDEVENTLISTENER) {\n    element.addEventListener(type, handler, false);\n  } else if ((element as any).attachEvent) {\n    (element as any).attachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = handler;\n  }\n}\nexport function removeEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if ((element as any).detachEvent) {\n    (element as any).detachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = null;\n  }\n}\n\nexport function innerWidth(el: HTMLElement) {\n  return getSize(el, \"Width\");\n}\nexport function innerHeight(el: HTMLElement) {\n  return getSize(el, \"Height\");\n}\nexport function getStyles(el: Element) {\n  return (SUPPORT_COMPUTEDSTYLE ?\n    window.getComputedStyle(el) : (el as any).currentStyle) || {};\n}\nfunction getSize(el: HTMLElement, name: \"Width\" | \"Height\") {\n  const size = el[`client${name}` as ClientSizeType] || el[`offset${name}` as OffsetSizeType];\n\n  return parseFloat(size || getStyles(el)[name.toLowerCase()]) || 0;\n}\n","import { addEvent, removeEvent, innerWidth, innerHeight, getAttribute } from \"./utils\";\nimport { WIDTH, HEIGHT } from \"./consts\";\nimport { AutoSizerElement } from \"./types\";\n\nconst elements: AutoSizerElement[] = [];\n\nexport function add(element: AutoSizerElement, prefix: string) {\n  !elements.length && addEvent(window, \"resize\", resizeAll);\n  element.__PREFIX__ = prefix;\n  elements.push(element);\n  resize(element);\n}\nexport function remove(element: AutoSizerElement, prefix: string) {\n  const index = elements.indexOf(element);\n\n  if (index < 0) {\n    return;\n  }\n  const fixed = getAttribute(element, `${prefix}fixed`);\n\n  delete element.__PREFIX__;\n  element.style[fixed === HEIGHT ? WIDTH : HEIGHT] = \"\";\n  elements.splice(index, 1);\n  !elements.length && removeEvent(window, \"resize\", resizeAll);\n}\nfunction resize(element: AutoSizerElement, prefix = \"data-\") {\n  let elementPrefix = element.__PREFIX__;\n\n  if (typeof elementPrefix !== \"string\") {\n    elementPrefix = prefix;\n  }\n  const dataWidth = parseInt(getAttribute(element, `${elementPrefix}${WIDTH}`), 10) || 0;\n  const dataHeight = parseInt(getAttribute(element, `${elementPrefix}${HEIGHT}`), 10) || 0;\n  const fixed = getAttribute(element, `${elementPrefix}fixed`);\n\n  if (fixed === HEIGHT) {\n    const size = innerHeight(element) || dataHeight;\n\n    element.style[WIDTH] = `${dataWidth / dataHeight * size}px`;\n  } else {\n    const size = innerWidth(element) || dataWidth;\n\n    element.style[HEIGHT] = `${dataHeight / dataWidth * size}px`;\n  }\n}\nexport function resizeAll() {\n  elements.forEach(element => {\n    resize(element);\n  });\n}\n","import { IS_IE } from \"./consts\";\nimport Component from \"@egjs/component\";\nimport { toArray, isDataAttribute, removeEvent, addEvent } from \"./utils\";\nimport { remove as removeAutoSizer, add as addAutoSizer } from \"./AutoSizer\";\n\n/**\n * @namespace eg.LazyLoaded\n */\n/**\n * This module is used to wait for images or videos to load.\n * @ko 이 모듈은 이미지 또는 비디오 로딩을 대기할 수 있습니다.\n * @memberof eg.LazyLoaded\n * @param -\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n *    <img src=\"./2.jpg\">\n *    <img src=\"./3.jpg\">\n *    <img src=\"./4.jpg\">\n *    <img src=\"ERR\">\n *    <img src=\"./6.jpg\">\n *    <img src=\"./7.jpg\">\n *    <img src=\"ERR\">\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import {check} from \"@egjs/lazyloaded\";\n *\n * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n *   ready: () => console.log(\"ready\"),\n *   finish: () => console.log(\"finish\"),\n *   error: e => console.log(\"error\", e),\n * });\n * ```\n */\nexport function check(\n  elements: HTMLElement[],\n  prefix: string = \"data-\",\n): Component {\n  const component = new Component();\n  let finishCount = 0;\n  let readyCount = 0;\n\n  function checkReady() {\n    if (--readyCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when the size of all images is available.\n     * @ko 모든 이미지의 사이즈를 구할 수 있는 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#ready\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   ready: () => console.log(\"ready\"),\n     * });\n     * ```\n     */\n    component.trigger(\"ready\");\n  }\n  function checkFinish() {\n    if (--finishCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when all images have been completed loading.\n     * @ko 모든 이미지가 로딩이 완료된 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#finish\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   finish: () => console.log(\"finish\"),\n     * });\n     * ```\n     */\n    component.trigger(\"finish\");\n  }\n  elements.forEach((el, i) => {\n    const tagName = el.tagName;\n\n    if (isDataAttribute(el, prefix) && tagName !== \"IMG\") {\n      addAutoSizer(el, prefix);\n      ++finishCount;\n      setTimeout(() => {\n        check(toArray(el.querySelectorAll(\"img\")), prefix).on(\"finish\", () => {\n          removeAutoSizer(el, prefix);\n          checkFinish();\n        });\n      });\n      return;\n    }\n    const images = tagName === \"IMG\" ? [el as HTMLImageElement] : toArray(el.querySelectorAll(\"img\"));\n\n    if (!images.length) {\n      return;\n    }\n    images.forEach((img, j) => {\n      if (img.complete && (!IS_IE || (IS_IE && img.naturalWidth))) {\n        if (!img.naturalWidth) {\n          setTimeout(() => {\n            component.trigger(\"error\", {\n              itemTarget: el,\n              itemIndex: i,\n              target: img,\n              index: j,\n            });\n          });\n        }\n        return;\n      }\n      if (isDataAttribute(img, prefix)) {\n        addAutoSizer(img, prefix);\n      } else {\n        ++readyCount;\n      }\n      ++finishCount;\n\n      function onError() {\n        /**\n         * An event occurs if the image fails to load.\n         * @ko 이미지가 로딩에 실패하면 이벤트가 발생한다.\n         * @event eg.LazyLoaded#error\n         * @param {object} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n         * @param {HTMLElement} [e.itemTarget] - The item's element with error images.<ko>오류난 이미지가 있는 아이템의 엘리먼트</ko>\n         * @param {number} [e.itemindex] - The item's index with error images. <ko>오류난 이미지가 있는 아이템의 인덱스</ko>\n         * @param {HTMLElement} [e.target] - Error image element <ko>오류난 이미지 엘리먼트</ko>\n         * @param {number} [e.index] - Error image index <ko>오류난 이미지의 인덱스</ko>\n         * @example\n         * ```html\n         * <div>\n         *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n         *    <img src=\"./2.jpg\"/>\n         *    <img src=\"ERR\"/>\n         * </div>\n         * ```\n         * ## Javascript\n         * ```js\n         * import {check} from \"@egjs/lazyloaded\";\n         *\n         * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n         *   error: e => {\n         *     // <div>...</div>, 0, <img src=\"ERR\"/>, 2\n         *     console.log(e.itemTarget, e.itemIndex, e.target, e.index),\n         *   },\n         * });\n         * ```\n         */\n        component.trigger(\"error\", {\n          itemTarget: el,\n          itemIndex: i,\n          target: img,\n          index: j,\n        });\n      }\n      function onCheck(e: Event) {\n        const target = (e.target || e.srcElement) as HTMLImageElement;\n\n        removeEvent(target, \"error\", onCheck);\n        removeEvent(target, \"load\", onCheck);\n\n        if (isDataAttribute(target, prefix)) {\n          removeAutoSizer(target, prefix);\n        } else {\n          checkReady();\n        }\n        if (e.type === \"error\") {\n          onError();\n        }\n        checkFinish();\n      }\n      addEvent(img, \"load\", onCheck);\n      addEvent(img, \"error\", onCheck);\n\n      IS_IE && img.setAttribute(\"src\", img.getAttribute(\"src\") as string);\n    });\n  });\n\n  !readyCount && setTimeout(() => {\n    component.trigger(\"ready\");\n  });\n\n  !finishCount && setTimeout(() => {\n    component.trigger(\"finish\");\n  });\n\n  return component;\n}\n\n\n/**\n * Remove the element that was registered in AutoSizer.\n * @ko AutoSizer에 등록됐던 엘리먼트를 제거 한다.\n * @memberof eg.LazyLoaded\n * @function removeAutoSizer\n * @param {HTMLElement} element - Element to be removed\n * @param {string} prefix - data prefix of element to be removed\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import { removeAutoSizer } from \"@egjs/lazyloaded\";\n *\n * if (target.getAttribute(\"data-width\")) {\n *   removeAutoSizer(target, \"data-\");\n * }\n * ```\n */\nexport { removeAutoSizer };\n"],"names":["isWindow","window","ua","navigator","userAgent","SUPPORT_COMPUTEDSTYLE","IS_IE","test","SUPPORT_ADDEVENTLISTENER","document","WIDTH","HEIGHT","el","name","getAttribute","arr","slice","call","target","prefix","element","type","handler","addEventListener","attachEvent","removeEventListener","detachEvent","size","parseFloat","getComputedStyle","currentStyle","getStyles","toLowerCase","elements","length","addEvent","resizeAll","__PREFIX__","push","resize","index","indexOf","fixed","style","splice","removeEvent","elementPrefix","dataWidth","parseInt","dataHeight","getSize","innerHeight","innerWidth","forEach","component","Component","finishCount","readyCount","trigger","i","tagName","isDataAttribute","addAutoSizer","setTimeout","check","toArray","querySelectorAll","on","removeAutoSizer","checkFinish","images","img","j","e","srcElement","onCheck","itemTarget","itemIndex","complete","naturalWidth","setAttribute"],"mappings":"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"}