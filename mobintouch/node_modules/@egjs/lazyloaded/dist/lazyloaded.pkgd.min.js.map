{"version":3,"file":"lazyloaded.pkgd.min.js","sources":["../src/consts.ts","../node_modules/@egjs/component/dist/component.esm.js","../src/utils.ts","../src/AutoSizer.ts","../src/LazyLoaded.ts"],"sourcesContent":["const isWindow = typeof window !== \"undefined\";\nconst ua = isWindow ? window.navigator.userAgent : \"\";\nexport const SUPPORT_COMPUTEDSTYLE = isWindow ? !!(\"getComputedStyle\" in window) : false;\nexport const IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nexport const SUPPORT_ADDEVENTLISTENER = isWindow ? !!(\"addEventListener\" in document) : false;\nexport const WIDTH = \"width\";\nexport const HEIGHT = \"height\";\n","/*\nCopyright (c) 2017 NAVER Corp.\n@egjs/component project is licensed under the MIT license\n\n@egjs/component JavaScript library\nhttps://naver.github.io/egjs-component\n\n@version 2.1.2\n*/\n/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nfunction isUndefined(value) {\n  return typeof value === \"undefined\";\n}\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n * @alias eg.Component\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  var Component =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Version info string\n    * @ko 버전정보 문자열\n    * @name VERSION\n    * @static\n    * @type {String}\n    * @example\n    * eg.Component.VERSION;  // ex) 2.0.0\n    * @memberof eg.Component\n    */\n\n    /**\n     * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n     */\n    function Component() {\n      this._eventHandler = {};\n      this.options = {};\n    }\n    /**\n     * Triggers a custom event.\n     * @ko 커스텀 이벤트를 발생시킨다\n     * @param {String} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n     * @param {Object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n     * @return {Boolean} Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">Ref</a> <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 'false'를 반환하고 이벤트 발생을 중단한다. <a href=\"https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\">참고</a></ko>\n     * @example\n    class Some extends eg.Component {\n     some(){\n     \tif(this.trigger(\"beforeHi\")){ // When event call to stop return false.\n    \tthis.trigger(\"hi\");// fire hi event.\n     \t}\n     }\n    }\n    const some = new Some();\n    some.on(\"beforeHi\", (e) => {\n    if(condition){\n    \te.stop(); // When event call to stop, `hi` event not call.\n    }\n    });\n    some.on(\"hi\", (e) => {\n    // `currentTarget` is component instance.\n    console.log(some === e.currentTarget); // true\n    });\n    // If you want to more know event design. You can see article.\n    // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n     */\n\n\n    var _proto = Component.prototype;\n\n    _proto.trigger = function trigger(eventName, customEvent) {\n      if (customEvent === void 0) {\n        customEvent = {};\n      }\n\n      var handlerList = this._eventHandler[eventName] || [];\n      var hasHandlerList = handlerList.length > 0;\n\n      if (!hasHandlerList) {\n        return true;\n      } // If detach method call in handler in first time then handler list calls.\n\n\n      handlerList = handlerList.concat();\n      customEvent.eventType = eventName;\n      var isCanceled = false;\n      var arg = [customEvent];\n      var i = 0;\n\n      customEvent.stop = function () {\n        isCanceled = true;\n      };\n\n      customEvent.currentTarget = this;\n\n      for (var _len = arguments.length, restParam = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        restParam[_key - 2] = arguments[_key];\n      }\n\n      if (restParam.length >= 1) {\n        arg = arg.concat(restParam);\n      }\n\n      for (i = 0; handlerList[i]; i++) {\n        handlerList[i].apply(this, arg);\n      }\n\n      return !isCanceled;\n    };\n    /**\n     * Executed event just one time.\n     * @ko 이벤트가 한번만 실행된다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       alert(\"hi\");\n     }\n     thing() {\n       this.once(\"hi\", this.hi);\n     }\n    }\n    var some = new Some();\n    some.thing();\n    some.trigger(\"hi\");\n    // fire alert(\"hi\");\n    some.trigger(\"hi\");\n    // Nothing happens\n     */\n\n\n    _proto.once = function once(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var i;\n\n        for (i in eventHash) {\n          this.once(i, eventHash[i]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var self = this;\n        this.on(eventName, function listener() {\n          for (var _len2 = arguments.length, arg = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            arg[_key2] = arguments[_key2];\n          }\n\n          handlerToAttach.apply(self, arg);\n          self.off(eventName, listener);\n        });\n      }\n\n      return this;\n    };\n    /**\n     * Checks whether an event has been attached to a component.\n     * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n     * @param {String} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n     * @return {Boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n     * @example\n    class Some extends eg.Component {\n     some() {\n       this.hasOn(\"hi\");// check hi event.\n     }\n    }\n     */\n\n\n    _proto.hasOn = function hasOn(eventName) {\n      return !!this._eventHandler[eventName];\n    };\n    /**\n     * Attaches an event to a component.\n     * @ko 컴포넌트에 이벤트를 등록한다.\n     * @param {eventName} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n     * @param {Function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.on(\"hi\",this.hi); //attach event\n     }\n    }\n    */\n\n\n    _proto.on = function on(eventName, handlerToAttach) {\n      if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n        var eventHash = eventName;\n        var name;\n\n        for (name in eventHash) {\n          this.on(name, eventHash[name]);\n        }\n\n        return this;\n      } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n        var handlerList = this._eventHandler[eventName];\n\n        if (isUndefined(handlerList)) {\n          this._eventHandler[eventName] = [];\n          handlerList = this._eventHandler[eventName];\n        }\n\n        handlerList.push(handlerToAttach);\n      }\n\n      return this;\n    };\n    /**\n     * Detaches an event from the component.\n     * @ko 컴포넌트에 등록된 이벤트를 해제한다\n     * @param {eventName} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n     * @param {Function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n     * @return {eg.Component} An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n     * @example\n    class Some extends eg.Component {\n     hi() {\n       console.log(\"hi\");\n     }\n     some() {\n       this.off(\"hi\",this.hi); //detach event\n     }\n    }\n     */\n\n\n    _proto.off = function off(eventName, handlerToDetach) {\n      // All event detach.\n      if (isUndefined(eventName)) {\n        this._eventHandler = {};\n        return this;\n      } // All handler of specific event detach.\n\n\n      if (isUndefined(handlerToDetach)) {\n        if (typeof eventName === \"string\") {\n          this._eventHandler[eventName] = undefined;\n          return this;\n        } else {\n          var eventHash = eventName;\n          var name;\n\n          for (name in eventHash) {\n            this.off(name, eventHash[name]);\n          }\n\n          return this;\n        }\n      } // The handler of specific event detach.\n\n\n      var handlerList = this._eventHandler[eventName];\n\n      if (handlerList) {\n        var k;\n        var handlerFunction;\n\n        for (k = 0; (handlerFunction = handlerList[k]) !== undefined; k++) {\n          if (handlerFunction === handlerToDetach) {\n            handlerList = handlerList.splice(k, 1);\n            break;\n          }\n        }\n      }\n\n      return this;\n    };\n\n    return Component;\n  }();\n\n  Component.VERSION = \"2.1.2\";\n  return Component;\n}();\n\nexport default Component;\n//# sourceMappingURL=component.esm.js.map\n","import { ArrayFormat, InnerSizeType, ClientSizeType, ScrollSizeType, OffsetSizeType } from \"./types\";\n\nimport { SUPPORT_ADDEVENTLISTENER, SUPPORT_COMPUTEDSTYLE } from \"./consts\";\n\nexport function getAttribute(el: HTMLElement, name: string) {\n  return el.getAttribute(name) || \"\";\n}\n\nexport function toArray<T>(arr: ArrayFormat<T>): T[] {\n  return [].slice.call(arr);\n}\nexport function isDataAttribute(target: HTMLElement, prefix: string = \"data-\"): boolean {\n  return !!target.getAttribute(`${prefix}width`);\n}\nexport function addEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (SUPPORT_ADDEVENTLISTENER) {\n    element.addEventListener(type, handler, false);\n  } else if ((element as any).attachEvent) {\n    (element as any).attachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = handler;\n  }\n}\nexport function removeEvent(\n  element: Element | Window,\n  type: string,\n  handler: (...args: any[]) => void,\n) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if ((element as any).detachEvent) {\n    (element as any).detachEvent(`on${type}`, handler);\n  } else {\n    (element as any)[`on${type}`] = null;\n  }\n}\n\nexport function innerWidth(el: HTMLElement) {\n  return getSize(el, \"Width\");\n}\nexport function innerHeight(el: HTMLElement) {\n  return getSize(el, \"Height\");\n}\nexport function getStyles(el: Element) {\n  return (SUPPORT_COMPUTEDSTYLE ?\n    window.getComputedStyle(el) : (el as any).currentStyle) || {};\n}\nfunction getSize(el: HTMLElement, name: \"Width\" | \"Height\") {\n  const size = el[`client${name}` as ClientSizeType] || el[`offset${name}` as OffsetSizeType];\n\n  return parseFloat(size || getStyles(el)[name.toLowerCase()]) || 0;\n}\n","import { addEvent, removeEvent, innerWidth, innerHeight, getAttribute } from \"./utils\";\nimport { WIDTH, HEIGHT } from \"./consts\";\nimport { AutoSizerElement } from \"./types\";\n\nconst elements: AutoSizerElement[] = [];\n\nexport function add(element: AutoSizerElement, prefix: string) {\n  !elements.length && addEvent(window, \"resize\", resizeAll);\n  element.__PREFIX__ = prefix;\n  elements.push(element);\n  resize(element);\n}\nexport function remove(element: AutoSizerElement, prefix: string) {\n  const index = elements.indexOf(element);\n\n  if (index < 0) {\n    return;\n  }\n  const fixed = getAttribute(element, `${prefix}fixed`);\n\n  delete element.__PREFIX__;\n  element.style[fixed === HEIGHT ? WIDTH : HEIGHT] = \"\";\n  elements.splice(index, 1);\n  !elements.length && removeEvent(window, \"resize\", resizeAll);\n}\nfunction resize(element: AutoSizerElement, prefix = \"data-\") {\n  let elementPrefix = element.__PREFIX__;\n\n  if (typeof elementPrefix !== \"string\") {\n    elementPrefix = prefix;\n  }\n  const dataWidth = parseInt(getAttribute(element, `${elementPrefix}${WIDTH}`), 10) || 0;\n  const dataHeight = parseInt(getAttribute(element, `${elementPrefix}${HEIGHT}`), 10) || 0;\n  const fixed = getAttribute(element, `${elementPrefix}fixed`);\n\n  if (fixed === HEIGHT) {\n    const size = innerHeight(element) || dataHeight;\n\n    element.style[WIDTH] = `${dataWidth / dataHeight * size}px`;\n  } else {\n    const size = innerWidth(element) || dataWidth;\n\n    element.style[HEIGHT] = `${dataHeight / dataWidth * size}px`;\n  }\n}\nexport function resizeAll() {\n  elements.forEach(element => {\n    resize(element);\n  });\n}\n","import { IS_IE } from \"./consts\";\nimport Component from \"@egjs/component\";\nimport { toArray, isDataAttribute, removeEvent, addEvent } from \"./utils\";\nimport { remove as removeAutoSizer, add as addAutoSizer } from \"./AutoSizer\";\n\n/**\n * @namespace eg.LazyLoaded\n */\n/**\n * This module is used to wait for images or videos to load.\n * @ko 이 모듈은 이미지 또는 비디오 로딩을 대기할 수 있습니다.\n * @memberof eg.LazyLoaded\n * @param -\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n *    <img src=\"./2.jpg\">\n *    <img src=\"./3.jpg\">\n *    <img src=\"./4.jpg\">\n *    <img src=\"ERR\">\n *    <img src=\"./6.jpg\">\n *    <img src=\"./7.jpg\">\n *    <img src=\"ERR\">\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import {check} from \"@egjs/lazyloaded\";\n *\n * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n *   ready: () => console.log(\"ready\"),\n *   finish: () => console.log(\"finish\"),\n *   error: e => console.log(\"error\", e),\n * });\n * ```\n */\nexport function check(\n  elements: HTMLElement[],\n  prefix: string = \"data-\",\n): Component {\n  const component = new Component();\n  let finishCount = 0;\n  let readyCount = 0;\n\n  function checkReady() {\n    if (--readyCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when the size of all images is available.\n     * @ko 모든 이미지의 사이즈를 구할 수 있는 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#ready\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   ready: () => console.log(\"ready\"),\n     * });\n     * ```\n     */\n    component.trigger(\"ready\");\n  }\n  function checkFinish() {\n    if (--finishCount !== 0) {\n      return;\n    }\n    /**\n     * An event occurs when all images have been completed loading.\n     * @ko 모든 이미지가 로딩이 완료된 상태가 된 경우 이벤트가 발생한다.\n     * @event eg.LazyLoaded#finish\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import {check} from \"@egjs/lazyloaded\";\n     *\n     * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n     *   finish: () => console.log(\"finish\"),\n     * });\n     * ```\n     */\n    component.trigger(\"finish\");\n  }\n  elements.forEach((el, i) => {\n    const tagName = el.tagName;\n\n    if (isDataAttribute(el, prefix) && tagName !== \"IMG\") {\n      addAutoSizer(el, prefix);\n      ++finishCount;\n      setTimeout(() => {\n        check(toArray(el.querySelectorAll(\"img\")), prefix).on(\"finish\", () => {\n          removeAutoSizer(el, prefix);\n          checkFinish();\n        });\n      });\n      return;\n    }\n    const images = tagName === \"IMG\" ? [el as HTMLImageElement] : toArray(el.querySelectorAll(\"img\"));\n\n    if (!images.length) {\n      return;\n    }\n    images.forEach((img, j) => {\n      if (img.complete && (!IS_IE || (IS_IE && img.naturalWidth))) {\n        if (!img.naturalWidth) {\n          setTimeout(() => {\n            component.trigger(\"error\", {\n              itemTarget: el,\n              itemIndex: i,\n              target: img,\n              index: j,\n            });\n          });\n        }\n        return;\n      }\n      if (isDataAttribute(img, prefix)) {\n        addAutoSizer(img, prefix);\n      } else {\n        ++readyCount;\n      }\n      ++finishCount;\n\n      function onError() {\n        /**\n         * An event occurs if the image fails to load.\n         * @ko 이미지가 로딩에 실패하면 이벤트가 발생한다.\n         * @event eg.LazyLoaded#error\n         * @param {object} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n         * @param {HTMLElement} [e.itemTarget] - The item's element with error images.<ko>오류난 이미지가 있는 아이템의 엘리먼트</ko>\n         * @param {number} [e.itemindex] - The item's index with error images. <ko>오류난 이미지가 있는 아이템의 인덱스</ko>\n         * @param {HTMLElement} [e.target] - Error image element <ko>오류난 이미지 엘리먼트</ko>\n         * @param {number} [e.index] - Error image index <ko>오류난 이미지의 인덱스</ko>\n         * @example\n         * ```html\n         * <div>\n         *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n         *    <img src=\"./2.jpg\"/>\n         *    <img src=\"ERR\"/>\n         * </div>\n         * ```\n         * ## Javascript\n         * ```js\n         * import {check} from \"@egjs/lazyloaded\";\n         *\n         * eg.LazyLoaded.check([document.querySelector(\"div\")]).on({\n         *   error: e => {\n         *     // <div>...</div>, 0, <img src=\"ERR\"/>, 2\n         *     console.log(e.itemTarget, e.itemIndex, e.target, e.index),\n         *   },\n         * });\n         * ```\n         */\n        component.trigger(\"error\", {\n          itemTarget: el,\n          itemIndex: i,\n          target: img,\n          index: j,\n        });\n      }\n      function onCheck(e: Event) {\n        const target = (e.target || e.srcElement) as HTMLImageElement;\n\n        removeEvent(target, \"error\", onCheck);\n        removeEvent(target, \"load\", onCheck);\n\n        if (isDataAttribute(target, prefix)) {\n          removeAutoSizer(target, prefix);\n        } else {\n          checkReady();\n        }\n        if (e.type === \"error\") {\n          onError();\n        }\n        checkFinish();\n      }\n      addEvent(img, \"load\", onCheck);\n      addEvent(img, \"error\", onCheck);\n\n      IS_IE && img.setAttribute(\"src\", img.getAttribute(\"src\") as string);\n    });\n  });\n\n  !readyCount && setTimeout(() => {\n    component.trigger(\"ready\");\n  });\n\n  !finishCount && setTimeout(() => {\n    component.trigger(\"finish\");\n  });\n\n  return component;\n}\n\n\n/**\n * Remove the element that was registered in AutoSizer.\n * @ko AutoSizer에 등록됐던 엘리먼트를 제거 한다.\n * @memberof eg.LazyLoaded\n * @function removeAutoSizer\n * @param {HTMLElement} element - Element to be removed\n * @param {string} prefix - data prefix of element to be removed\n * @example\n * ## HTML\n * ```html\n * <div>\n *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n * </div>\n * ```\n * ## Javascript\n * ```js\n * import { removeAutoSizer } from \"@egjs/lazyloaded\";\n *\n * if (target.getAttribute(\"data-width\")) {\n *   removeAutoSizer(target, \"data-\");\n * }\n * ```\n */\nexport { removeAutoSizer };\n"],"names":["isWindow","window","ua","navigator","userAgent","SUPPORT_COMPUTEDSTYLE","IS_IE","test","SUPPORT_ADDEVENTLISTENER","document","WIDTH","HEIGHT","isUndefined","value","Component","_eventHandler","options","_proto","prototype","trigger","eventName","customEvent","handlerList","this","length","concat","eventType","isCanceled","arg","i","stop","currentTarget","_len","arguments","restParam","Array","_key","apply","once","handlerToAttach","eventHash","self","on","listener","_len2","_key2","off","hasOn","name","push","handlerToDetach","undefined","k","handlerFunction","splice","VERSION","el","getAttribute","arr","slice","call","target","prefix","element","type","handler","addEventListener","attachEvent","removeEventListener","detachEvent","size","parseFloat","getComputedStyle","currentStyle","getStyles","toLowerCase","elements","addEvent","resizeAll","__PREFIX__","resize","index","indexOf","fixed","style","removeEvent","elementPrefix","dataWidth","parseInt","dataHeight","getSize","innerHeight","innerWidth","forEach","component","finishCount","readyCount","tagName","isDataAttribute","addAutoSizer","setTimeout","check","toArray","querySelectorAll","removeAutoSizer","checkFinish","images","img","j","e","srcElement","onCheck","itemTarget","itemIndex","complete","naturalWidth","setAttribute"],"mappings":"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"}