import ItemManager from "./ItemManager";
import { CursorType, IInfiniteGridGroup, IInfiniteStatus, IRemoveResult, IItem, IInfiniteOptions, IInfiniteGridItem } from "./types";
declare class Infinite {
    options: Required<IInfiniteOptions>;
    private _itemManager;
    private _status;
    constructor(itemManger: ItemManager, options: IInfiniteOptions);
    setSize(size: number): void;
    sync(items: IItem[]): "" | "relayout" | "layout";
    recycle(scrollPos: number | null, isForward?: boolean): void;
    scroll(scrollPos: number | null): void;
    setCursor(cursor: CursorType, index: number): void;
    setStatus(status: IInfiniteStatus): void;
    getStatus(startKey?: string | number, endKey?: string | number): IInfiniteStatus;
    getEdgeOutline(cursor: CursorType): number[];
    getEdgeValue(cursor: CursorType): number;
    getVisibleItems(): IInfiniteGridItem[];
    getCursors(): number[];
    getCursor(cursor: CursorType): number;
    getVisibleData(): IInfiniteGridGroup[];
    remove(groupIndex: number, itemIndex: number): IRemoveResult;
    clear(): void;
}
export default Infinite;
